Step by Step Guide f√ºr Ubuntu 10.04


This guide assumes that you are working as user root. Usually this isn't recommended, but to make it easier for you, we'll omit that.

In this guide, I've used "/var/www" as web server root.

apt-get install apache2 php5-mysql php5-curl php5-cli php-pear git php5-imagick php5-xsl php-apc mysql-client mysql-server libapache2-mod-php5

# Update PEAR

pear update-channels
pear upgrade

# Install phpunit, phing

pear config-set auto_discover 1
pear channel-discover pear.phpunit.de
pear install phpunit/PHPUnit
pear channel-discover pear.phing.info
pear install phing/phing

pear install pear.doctrine-project.org/DoctrineORM
pear install phpunit/phpcpd
pear install --alldeps phpmd/PHP_PMD-alpha

# Create a new database
mysql -uroot -p
CREATE DATABASE partkeepr;
grant usage on *.* to partkeepr@localhost identified by 'partkeepr';
grant all privileges on partkeepr.* to partkeepr@localhost;
quit

# Test if you can connect
mysql -upartkeepr -ppartkeepr
quit

# Setting up the PartKeepr repository
cd /var/www

# Cloning will take a while, approx 50MB repository will be downloaded
git clone git://github.com/partkeepr/PartKeepr.git	

cd /var/www/PartKeepr

# This will update the submodules. Another 200MB will be downloaded
git submodule sync
git submodule update

cp config.php.template config.php

# You have now two choices: Proceed with or without sample data.

# ==== WITH SAMPLE DATA ====
mysql -uroot -p
CREATE DATABASE partdb
grant usage on *.* to partdb@localhost identified by 'partdb';
grant all privileges on partdb.* to partdb@localhost;
FLUSH PRIVILEGES;
quit

mysql -upartdb -ppartdb partdb < testing/setup.sql
cd testing
php SetupDatabase.php --yes --migrate

# ==== WITHOUT SAMPLE DATA ====
cd testing
php SetupDatabase.php --yes

# ==== Issuing migrations ====
# Ignore all messages about "was executed but did not result in any SQL statements"
cd /var/www/PartKeepr/
php doctrine.php migrations:migrate

# Build the frontend
phing build

# Open up your browser and navigate to http://localhost/PartKeepr/build
# The frontend should now appear

